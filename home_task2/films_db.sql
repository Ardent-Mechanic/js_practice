-- Database: films


SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET client_min_messages = warning;
SET default_tablespace = '';
SET default_with_oids = false;

CREATE TABLE IF NOT EXISTS films
(
    film_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    film_name text  NOT NULL,
    video_quality character varying(32) NOT NULL,
    subtitles text NOT NULL,
    number_of_ratings integer NOT NULL,
    number_of_reviews integer NOT NULL,
    country character varying(64) NOT NULL,
    tagline text,
    budget integer NOT NULL,
    marketing integer NOT NULL,
    us_fees integer NOT NULL,
    world_fees integer NOT NULL,
    premiere_ru date NOT NULL,
    premiere_world date NOT NULL,
    dvd_release date NOT NULL,
    mpaa_rating character varying(5),
    year_of_production date NOT NULL,
    age_rating smallint,
    length character varying(32),
    CONSTRAINT films_pkey PRIMARY KEY (film_id)
);

CREATE TABLE IF NOT EXISTS actors
(
    person_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(32) COLLATE pg_catalog."default" NOT NULL,
    second_name character varying(32) COLLATE pg_catalog."default" NOT NULL,
    birthdate date NOT NULL,
    role_type character varying(32) COLLATE pg_catalog."default",
    number_of_films smallint NOT NULL,
    CONSTRAINT actors_pkey PRIMARY KEY (person_id)
);

CREATE TABLE IF NOT EXISTS films_actors
(
    film_id integer NOT NULL,
    actor_id integer NOT NULL,
    CONSTRAINT film_actor_pkey PRIMARY KEY (film_id, actor_id),
    CONSTRAINT films_actors_actor_id_fkey FOREIGN KEY (actor_id)
    REFERENCES public.actors (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT films_actors_film_id_fkey FOREIGN KEY (film_id)
    REFERENCES public.films (film_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    genre_name character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT genres_pkey PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id integer NOT NULL,
    genre_id integer NOT NULL,
    CONSTRAINT film_gener_pkey PRIMARY KEY (film_id, genre_id),
    CONSTRAINT films_geners_film_id_fkey FOREIGN KEY (film_id)
    REFERENCES public.films (film_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT films_geners_genre_id_fkey FOREIGN KEY (genre_id)
    REFERENCES public.genres (genre_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS spectators
(
    country_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    country_name character varying(64) COLLATE pg_catalog."default",
    number_of_spectators integer NOT NULL,
    CONSTRAINT countries_pkey PRIMARY KEY (country_id)
);

CREATE TABLE IF NOT EXISTS films_spectators
(
    film_id integer NOT NULL,
    country_id integer NOT NULL,
    info_date date NOT NULL,
    CONSTRAINT film_spectator_pkey PRIMARY KEY (film_id, country_id),
    CONSTRAINT films_spectators_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.spectators (country_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT films_spectators_film_id_fkey FOREIGN KEY (film_id)
    REFERENCES public.films (film_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS persons
(
    person_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(32) COLLATE pg_catalog."default" NOT NULL,
    second_name character varying(32) COLLATE pg_catalog."default" NOT NULL,
    birthdate date NOT NULL,
    job_type character varying(32) COLLATE pg_catalog."default" NOT NULL,
    number_of_films smallint NOT NULL,
    film_id integer NOT NULL,
    CONSTRAINT person_pkey PRIMARY KEY (person_id),
    CONSTRAINT fk_film_id FOREIGN KEY (film_id)
    REFERENCES public.films (film_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);
